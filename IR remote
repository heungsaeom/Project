#include <LiquidCrystal.h>
#include <EEPROM.h>
LiquidCrystal lcd(8, 7, 6, 5, 4, 3);
#include <IRremote.h>
int RECV_PIN = 11;
IRrecv irrecv(RECV_PIN);
decode_results results;
#define thietbi1 A1
#define thietbi2 A2
#define thietbi3 A3
#define thietbi4 2
#define eeprom1 101
#define eeprom2 102
#define eeprom3 103
#define eeprom4 104
#define IR1 16724175
#define IR2 16718055
#define IR3 16743045
#define IR4 16716015
#define IRoff 16738455
#define IRon 16732845

// read double word from EEPROM, give starting address
unsigned long EEPROM_readlong(int address)
{
  //use word read function for reading upper part
  unsigned long dword = EEPROM_readint(address);
  //shift read word up
  dword = dword << 16;
  // read lower word from EEPROM and OR it into double word
  dword = dword | EEPROM_readint(address + 2);
  return dword;
}

//write word to EEPROM
void EEPROM_writeint(int address, int value)
{
  EEPROM.write(address, highByte(value));
  EEPROM.write(address + 1 , lowByte(value));
}

//write long integer into EEPROM
void EEPROM_writelong(int address, unsigned long value)
{
  //truncate upper part and write lower part into EEPROM
  EEPROM_writeint(address + 2, word(value));
  //shift upper part down
  value = value >> 16;
  //truncate and write
  EEPROM_writeint(address, word(value));
}

unsigned int EEPROM_readint(int address)
{
  unsigned int word = word(EEPROM.read(address), EEPROM.read(address + 1));
  return word;
}

void setup()
{
  Serial.begin(9600);
  // In case the interrupt driver crashes on setup, give a clue
  // to the user what's going on.
  lcd.begin(16, 2);
  irrecv.enableIRIn(); // Start the receiver
  pinMode(thietbi1, OUTPUT);
  pinMode(thietbi2, OUTPUT);
  pinMode(thietbi3, OUTPUT);
  pinMode(thietbi4, OUTPUT);
  EEPROM_writelong(0, IR1);
  EEPROM_writelong(5, IR2);
  EEPROM_writelong(10, IR3);
  EEPROM_writelong(15, IR4);
  EEPROM_writelong(20, IRoff);
  EEPROM_writelong(25, IRon);
  digitalWrite(thietbi1, EEPROM.read(eeprom1));
  digitalWrite(thietbi2, EEPROM.read(eeprom2));
  digitalWrite(thietbi3, EEPROM.read(eeprom3));
  digitalWrite(thietbi4, EEPROM.read(eeprom4));
}

void loop() {
  if (irrecv.decode(&results)) {
    delay(100);
    lcd.clear();
    lcd.setCursor(2, 0);
    lcd.print(results.value);
    if (results.value == EEPROM_readlong(0))
    {
      digitalWrite(thietbi1, !digitalRead(thietbi1));
      if (digitalRead(thietbi1) == 0) {
        EEPROM.write(eeprom1, 0);
      }
      else if (digitalRead(thietbi1) == 1) {
        EEPROM.write(eeprom1, 1);
      }
    }
    if (results.value == EEPROM_readlong(5))
    {
      digitalWrite(thietbi2, !digitalRead(thietbi2));
      if (digitalRead(thietbi2) == 0) {
        EEPROM.write(eeprom2, 0);
      }
      else if (digitalRead(thietbi2) == 1) {
        EEPROM.write(eeprom2, 1);
      }
    }
    if (results.value == EEPROM_readlong(10))
    {
      digitalWrite(thietbi3, !digitalRead(thietbi3));
      if (digitalRead(thietbi3) == 0) {
        EEPROM.write(eeprom3, 0);
      }
      else if (digitalRead(thietbi3) == 1) {
        EEPROM.write(eeprom3, 1);
      }
    }
    if (results.value == EEPROM_readlong(15))
    {
      digitalWrite(thietbi4, !digitalRead(thietbi4));
      if (digitalRead(thietbi4) == 0) {
        EEPROM.write(eeprom4, 0);
      }
      else if (digitalRead(thietbi4) == 1) {
        EEPROM.write(eeprom4, 1);
      }
    }
    if (results.value == EEPROM_readlong(20))
    {
      digitalWrite(thietbi1, 0);
      digitalWrite(thietbi2, 0);
      digitalWrite(thietbi3, 0);
      digitalWrite(thietbi4, 0);
      EEPROM.write(eeprom1, 0);
      EEPROM.write(eeprom2, 0);
      EEPROM.write(eeprom3, 0);
      EEPROM.write(eeprom4, 0);
    }
    if (results.value == EEPROM_readlong(25))
    {
      digitalWrite(thietbi1, 1);
      digitalWrite(thietbi2, 1);
      digitalWrite(thietbi3, 1);
      digitalWrite(thietbi4, 1);
      EEPROM.write(eeprom1, 1);
      EEPROM.write(eeprom2, 1);
      EEPROM.write(eeprom3, 1);
      EEPROM.write(eeprom4, 1);
    }
    irrecv.resume(); // Receive the next value
  }
  delay(100);
}
